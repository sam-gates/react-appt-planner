{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","value","map","contact","index","name","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","target","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","array","Object","values","className","data","TileList","objArr","AppointmentsPage","props","appointments","addAppointment","useState","e","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","required","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b722df1b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, onChange}) => {\r\n\r\n \r\n\r\n  return (\r\n    <select onChange={onChange} >\r\n      <option value='' key='default'>Select A Contact</option>\r\n      {contacts.map((contact,index) => \r\n        <option value={contact.name} key={index}>{contact.name}</option>\r\n        )}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} >\r\n      <input \r\n        type='text'\r\n        value={title}\r\n        onChange={({target}) => setTitle(target.value)}\r\n        placeholder='Meeting Title'\r\n      />\r\n      <input \r\n        type='date'\r\n        value={date}\r\n        min={getTodayString()}\r\n        onChange={({target}) => setDate(target.value)}\r\n        placeholder='Date'\r\n      />\r\n      <input \r\n        type='time'\r\n        value={time}\r\n        onChange={({target}) => setTime(target.value)}\r\n        placeholder='Time'\r\n      />\r\n      <ContactPicker \r\n        contacts={contacts}\r\n        value={contact}\r\n        onChange={({target}) => setContact(target.value)}\r\n      /> \r\n      <input type='submit' />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({value}) => {\r\n  const array = Object.values(value);\r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {array.map((data, index) => {\r\n        if(index === 0) {\r\n          return <p className='tile-title' key={index} >{data}</p>;\r\n        }\r\n        \r\n        return <p className='tile' key={index} >{data}</p>;\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from '../tile/Tile';\r\n\r\nexport const TileList = ({objArr}) => {\r\n\r\n  return (\r\n    <div>\r\n      {objArr.map((value, index) => \r\n      <Tile value={value} key={index} />\r\n      )}    \r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from '../../components/appointmentForm/AppointmentForm';\r\nimport { TileList } from '../../components/tileList/TileList';\r\n\r\nexport const AppointmentsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n\r\n  const appointments = props.appointments;\r\n  const contacts = props.contacts;\r\n  const addAppointment = props.addAppointment;\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n\r\n    addAppointment(title, contact, date, time);\r\n\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n   \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n          <AppointmentForm \r\n            title={title}\r\n            setTitle={setTitle}\r\n            contact={contact}\r\n            setContact={setContact}\r\n            date={date}\r\n            setDate={setDate}\r\n            time={time}\r\n            setTime={setTime}\r\n            handleSubmit={handleSubmit}\r\n            contacts={contacts}\r\n          />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n          <TileList objArr={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        value={name}\r\n        onChange={({target}) => {setName(target.value)}}\r\n        placeholder='Name'\r\n        required\r\n      />\r\n      <input\r\n        type='tel'\r\n        value={phone}\r\n        pattern=\"[1-9][0-9]{2}-[1-9][0-9]{2}-[0-9]{4}\"\r\n        onChange={({target}) => {setPhone(target.value)}}\r\n        placeholder='Phone Number'\r\n        \r\n      />\r\n      <input\r\n        type='email'\r\n        value={email}\r\n        onChange={({target}) => {setEmail(target.value)}}\r\n        placeholder='Email'\r\n        required\r\n      />\r\n      <input\r\n        type='submit'\r\n      />\r\n    </form>\r\n\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from '../../components/tileList/TileList'\r\n;\r\nexport const ContactsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n \r\n  const contacts = props.contacts;\r\n  const addContact = props.addContact;\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n\r\n    if(!duplicate) {\r\n\r\n      addContact(name, phone, email);\r\n\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('')\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  useEffect(() => {\r\n    for(const contact of contacts) {\r\n      if(name === contact.name) {\r\n        setDuplicate(true);\r\n      }\r\n      return;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          name={name}\r\n          phone={phone}\r\n          email={email}\r\n          setName={setName}\r\n          setEmail={setEmail}\r\n          setPhone={setPhone}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList \r\n          objArr={props.contacts}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const addContact = (name, phone, email) => {\r\n    setContacts(prev => ([...prev, {name, phone, email}]));\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments(prev => ([...prev, {title, contact, date, time}]));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage \r\n            addContact={addContact}\r\n            contacts={contacts}\r\n            />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage \r\n            addAppointment={addAppointment}\r\n            appointments={appointments}\r\n            contacts={contacts}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}